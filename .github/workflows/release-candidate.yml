name: "Create release candidate"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version you want to release. https://semver.org'
        required: true

jobs:
  create-release-candidate:
    name: "Create release candidate"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      # Perma-cache Poetry since we only need it for checking pyproject version
      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v2.1.6
        with:
          path: ~/.poetry
          key: poetry
      # Only runs when key from caching step changes
      - name: Install latest version of Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
      # Poetry still needs to be re-prepended to the PATH on each run, since
      # PATH does not persist between runs.
      - name: Add Poetry to $PATH
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Create release branch
        run: git checkout -b release/v${{ github.event.inputs.version }}

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
      - name: Bump version in pyproject.toml
        run: poetry version ${{ github.event.inputs.version }}

      - name: Commit pyproject files
        id: make-commit
        run: |
          git add pyproject.toml
          git commit --message "chore: Release v${{ github.event.inputs.version }}"
          echo "::set-output name=commit::$(git rev-parse HEAD)"
      - name: Push new branch
        run: git push origin release/v${{ github.event.inputs.version }}

      - name: Create pull request to main
        uses: thomaseizinger/create-pull-request@1.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: release/v${{ github.event.inputs.version }}
          base: main
          title: Release v${{ github.event.inputs.version }}
          reviewers: ${{ github.actor }} # By default, we request a review from the person who triggered the workflow.
          # Write a nice message to the user.
          # We are claiming things here based on the `publish-new-release.yml` workflow.
          # You should obviously adopt it to say the truth depending on your release workflow :)
          body: |
            Hi @${{ github.actor }}!
            This PR was created in response to a manual trigger of the release workflow here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.
            I've updated bumped the versions in the manifest file in this commit: ${{ steps.make-commit.outputs.commit }}.
            Merging this PR will create a GitHub release and upload any assets that are created as part of the release build.
